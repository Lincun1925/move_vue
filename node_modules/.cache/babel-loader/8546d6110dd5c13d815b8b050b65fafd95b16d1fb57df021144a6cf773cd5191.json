{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n  // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n    // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","getRectRelativeToOffsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["E:/move/springboot-vue-demo/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n  // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n    // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}