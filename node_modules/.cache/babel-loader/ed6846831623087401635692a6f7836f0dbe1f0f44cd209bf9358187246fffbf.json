{"ast":null,"code":"import { defineComponent, computed, provide, openBlock, createBlock, resolveDynamicComponent, normalizeClass, unref, normalizeStyle, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { rowProps } from './row.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { rowContextKey } from '../../../tokens/row.mjs';\nconst __default__ = defineComponent({\n  name: \"ElRow\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: rowProps,\n  setup(__props) {\n    const props = __props;\n    const ns = useNamespace(\"row\");\n    const gutter = computed(() => props.gutter);\n    provide(rowContextKey, {\n      gutter\n    });\n    const style = computed(() => {\n      const styles = {};\n      if (!props.gutter) {\n        return styles;\n      }\n      styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`;\n      return styles;\n    });\n    const rowKls = computed(() => [ns.b(), ns.is(`justify-${props.justify}`, props.justify !== \"start\"), ns.is(`align-${props.align}`, props.align !== \"top\")]);\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n        class: normalizeClass(unref(rowKls)),\n        style: normalizeStyle(unref(style))\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\", \"style\"]);\n    };\n  }\n});\nvar Row = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/row/src/row.vue\"]]);\nexport { Row as default };","map":{"version":3,"mappings":";;;;;;;mCAac;EACZA,IAAM;AACR;;;;;;IAIM,WAAKC,aAAa,KAAK;IAC7B,MAAMC,MAAS,YAAS,MAAMC,MAAMD,MAAM;IAE1CE,QAAQC,aAAe;MACrBH;IAAA,CACD;IAEK,cAAQI,SAAS,MAAM;MAC3B,MAAMC,SAAwB,EAAC;MAC3B,KAACJ,MAAMD,MAAQ;QACV;MAAA;MAGTK,OAAOC,WAAc,UAAOC,UAAa,OAAIN,MAAMD,MAAS;MACrD;IAAA,CACR;IAEK,eAASI,SAAS,MAAM,CAC5BI,GAAGC,CAAE,IACLD,GAAGE,EAAG,YAAWT,MAAMU,OAAW,UAAMA,YAAY,OAAO,GAC3DH,GAAGE,EAAG,UAAST,MAAMW,KAAS,UAAMA,UAAU,KAAK,EACpD","names":["name","useNamespace","gutter","props","provide","rowContextKey","computed","styles","marginRight","marginLeft","ns","b","is","justify","align"],"sources":["../../../../../../packages/components/row/src/row.vue"],"sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"rowKls\" :style=\"style\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, provide } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport { rowProps } from './row'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElRow',\n})\n\nconst props = defineProps(rowProps)\n\nconst ns = useNamespace('row')\nconst gutter = computed(() => props.gutter)\n\nprovide(rowContextKey, {\n  gutter,\n})\n\nconst style = computed(() => {\n  const styles: CSSProperties = {}\n  if (!props.gutter) {\n    return styles\n  }\n\n  styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`\n  return styles\n})\n\nconst rowKls = computed(() => [\n  ns.b(),\n  ns.is(`justify-${props.justify}`, props.justify !== 'start'),\n  ns.is(`align-${props.align}`, props.align !== 'top'),\n])\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}