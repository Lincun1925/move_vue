{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"50px\",\n    \"line-height\": \"50px\",\n    \"border-bottom\": \"1px solid #ccc\",\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"500px\",\n    \"padding-left\": \"30px\",\n    \"font-size\": \"x-large\",\n    \"font-weight\": \"bold\",\n    \"color\": \"darkslateblue\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"flex\": \"1\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  style: {\n    \"width\": \"200px\",\n    \"padding-top\": \"5px\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"el-dropdown-link\",\n  style: {\n    \"font-size\": \"x-large\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_down = _resolveComponent(\"arrow-down\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  const _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  const _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"当前时间：\" + _toDisplayString($data.newTime), 1 /* TEXT */)]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_dropdown, null, {\n    dropdown: _withCtx(() => [_createVNode(_component_el_dropdown_menu, {\n      style: {\n        \"width\": \"150px\",\n        \"text-align\": \"center\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_dropdown_item, {\n        onClick: $options.show,\n        style: {\n          \"font-weight\": \"bold\",\n          \"font-size\": \"large\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"个人信息\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_dropdown_item, {\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/login')),\n        style: {\n          \"font-weight\": \"bold\",\n          \"font-size\": \"large\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"退出系统\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_5, [_createTextVNode(\" 当前用户：\" + _toDisplayString($data.myInformation.username) + \" \", 1 /* TEXT */), _createVNode(_component_el_icon, {\n      class: \"el-icon--right\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_arrow_down)]),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAiF,EAAjF;IAAA;IAAA;IAAA;IAAA;EAAA;AAAiF;;EAC/EA,KACoD,EADpD;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AACoD;gCAGzDC,oBAA2B;EAAtBD,KAAe,EAAf;IAAA;EAAA;AAAe;;EACfA,KAAqC,EAArC;IAAA;IAAA;EAAA;AAAqC;;EAEpCE,KAAK,EAAC,kBAAkB;EAACF,KAA0B,EAA1B;IAAA;EAAA;;;;;;;;uBARjCG,oBAsBM,OAtBNC,UAsBM,GArBJH,oBAGM,OAHNI,UAGM,GADJJ,oBAA+B,cAAzB,OAAK,oBAAGK,aAAO,oBAEvBC,UAA2B,EAC3BN,oBAeM,OAfNO,UAeM,GAdJC,aAacC;IANDC,QAAQ,WACjB,MAGmB,CAHnBF,aAGmBG;MAHDZ,KAAwC,EAAxC;QAAA;QAAA;MAAA;IAAwC;wBACxD,MAAkG,CAAlGS,aAAkGI;QAA/EC,OAAK,EAAEC,aAAI;QAAEf,KAA0C,EAA1C;UAAA;UAAA;QAAA;;0BAA2C,MAAI,kBAAJ,MAAI;;sCAC/ES,aAAoHI;QAAjGC,OAAK,sCAAEE,YAAO,CAACC,IAAI;QAAYjB,KAA0C,EAA1C;UAAA;UAAA;QAAA;;0BAA2C,MAAI,kBAAJ,MAAI;;;;;;;sBATzG,MAKO,CALPC,oBAKO,QALPiB,UAKO,oBALmD,QACnD,oBAAEZ,mBAAa,CAACa,QAAQ,IAAE,GAC/B,8BAEUC;MAFDlB,KAAK,EAAC;IAAgB;wBAC7B,MAAa,CAAbO,aAAaY","names":["style","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","$data","_hoisted_3","_hoisted_4","_createVNode","_component_el_dropdown","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","onClick","$options","_ctx","push","_hoisted_5","username","_component_el_icon","_component_arrow_down"],"sourceRoot":"","sources":["E:\\move\\springboot-vue-demo\\vue\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 50px;line-height: 50px;border-bottom:1px solid #ccc;display: flex\">\r\n    <div style=\"width: 500px;padding-left: 30px;\r\n    font-size:x-large;font-weight: bold;color: darkslateblue\">\r\n      <span>当前时间：{{ newTime }}</span>\r\n    </div>\r\n    <div style=\"flex: 1\"></div>\r\n    <div style=\"width: 200px;padding-top: 5px\">\r\n      <el-dropdown>\r\n    <span class=\"el-dropdown-link\" style=\"font-size: x-large\">\r\n      当前用户：{{myInformation.username}}\r\n      <el-icon class=\"el-icon--right\">\r\n        <arrow-down/>\r\n      </el-icon>\r\n    </span>\r\n        <template #dropdown>\r\n          <el-dropdown-menu style=\"width: 150px; text-align: center\">\r\n            <el-dropdown-item @click=\"show\" style=\"font-weight: bold;font-size: large\">个人信息</el-dropdown-item>\r\n            <el-dropdown-item @click=\"$router.push('/login')\" style=\"font-weight: bold;font-size: large\">退出系统</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Header\",\r\n  mounted() {\r\n    this.getNowTime();\r\n    clearInterval(myTimeDisplay);\r\n    var myTimeDisplay = setInterval(() => {\r\n      this.getNowTime();//每秒更新一次时间\r\n    }, 1000);\r\n  },\r\n  created() {\r\n    request.get(\"/user/information\").then(res => {\r\n      this.myInformation = res.data\r\n    })\r\n  },\r\n  methods: {\r\n    getNowTime() {\r\n      var date = new Date();\r\n      var time = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' '\r\n          + date.getHours() + ':' + date.getMinutes() + \":\" + date.getSeconds();\r\n      this.newTime = time;\r\n    },\r\n    show() {\r\n      this.$message({\r\n        type: \"info\",\r\n        message: \"用户名:（\" + this.myInformation.username + \"）密码:（\" +\r\n            this.myInformation.password + \"）邮箱:（\" +\r\n            this.myInformation.email + \"）\"\r\n      })\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      myInformation: [],\r\n      newTime: \"\"\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}