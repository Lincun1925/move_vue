{"ast":null,"code":"import { shallowRef, ref, onMounted } from 'vue';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { easeInOutCubic } from '../../../utils/animation.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst useBackTop = (props, emit, componentName) => {\n  const el = shallowRef();\n  const container = shallowRef();\n  const visible = ref(false);\n  const scrollToTop = () => {\n    if (!el.value) return;\n    const beginTime = Date.now();\n    const beginValue = el.value.scrollTop;\n    const frameFunc = () => {\n      if (!el.value) return;\n      const progress = (Date.now() - beginTime) / 500;\n      if (progress < 1) {\n        el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n        requestAnimationFrame(frameFunc);\n      } else {\n        el.value.scrollTop = 0;\n      }\n    };\n    requestAnimationFrame(frameFunc);\n  };\n  const handleScroll = () => {\n    if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight;\n  };\n  const handleClick = event => {\n    scrollToTop();\n    emit(\"click\", event);\n  };\n  const handleScrollThrottled = useThrottleFn(handleScroll, 300, true);\n  useEventListener(container, \"scroll\", handleScrollThrottled);\n  onMounted(() => {\n    var _a;\n    container.value = document;\n    el.value = document.documentElement;\n    if (props.target) {\n      el.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n      if (!el.value) {\n        throwError(componentName, `target does not exist: ${props.target}`);\n      }\n      container.value = el.value;\n    }\n  });\n  return {\n    visible,\n    handleClick\n  };\n};\nexport { useBackTop };","map":{"version":3,"mappings":";;;;;AAGY,MAACA,UAAU,GAAG,CAACC,KAAK,EAAEC,IAAI,EAAEC,aAAa,KAAK;EACxD,MAAMC,EAAE,GAAGC,UAAU,EAAE;EACvB,MAAMC,SAAS,GAAGD,UAAU,EAAE;EAC9B,MAAME,OAAO,GAAGC,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAI,CAACL,EAAE,CAACM,KAAK,EACX;IACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;IAC5B,MAAMC,UAAU,GAAGV,EAAE,CAACM,KAAK,CAACK,SAAS;IACrC,MAAMC,SAAS,GAAG,MAAM;MACtB,IAAI,CAACZ,EAAE,CAACM,KAAK,EACX;MACF,MAAMO,QAAQ,GAAG,CAACL,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS,IAAI,GAAG;MAC/C,IAAIM,QAAQ,GAAG,CAAC,EAAE;QAChBb,EAAE,CAACM,KAAK,CAACK,SAAS,GAAGD,UAAU,IAAI,CAAC,GAAGI,cAAc,CAACD,QAAQ,CAAC,CAAC;QAChEE,qBAAqB,CAACH,SAAS,CAAC;MACxC,CAAO,MAAM;QACLZ,EAAE,CAACM,KAAK,CAACK,SAAS,GAAG,CAAC;MAC9B;IACA,CAAK;IACDI,qBAAqB,CAACH,SAAS,CAAC;EACpC,CAAG;EACD,MAAMI,YAAY,GAAG,MAAM;IACzB,IAAIhB,EAAE,CAACM,KAAK,EACVH,OAAO,CAACG,KAAK,GAAGN,EAAE,CAACM,KAAK,CAACK,SAAS,IAAId,KAAK,CAACoB,gBAAgB;EAClE,CAAG;EACD,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7Bd,WAAW,EAAE;IACbP,IAAI,CAAC,OAAO,EAAEqB,KAAK,CAAC;EACxB,CAAG;EACD,MAAMC,qBAAqB,GAAGC,aAAa,CAACL,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;EACpEM,gBAAgB,CAACpB,SAAS,EAAE,QAAQ,EAAEkB,qBAAqB,CAAC;EAC5DG,SAAS,CAAC,MAAM;IACd,IAAIC,EAAE;IACNtB,SAAS,CAACI,KAAK,GAAGmB,QAAQ;IAC1BzB,EAAE,CAACM,KAAK,GAAGmB,QAAQ,CAACC,eAAe;IACnC,IAAI7B,KAAK,CAAC8B,MAAM,EAAE;MAChB3B,EAAE,CAACM,KAAK,GAAG,CAACkB,EAAE,GAAGC,QAAQ,CAACG,aAAa,CAAC/B,KAAK,CAAC8B,MAAM,CAAC,KAAK,IAAI,GAAGH,EAAE,GAAG,KAAK,CAAC;MAC5E,IAAI,CAACxB,EAAE,CAACM,KAAK,EAAE;QACbuB,UAAU,CAAC9B,aAAa,EAAG,0BAAyBF,KAAK,CAAC8B,MAAO,EAAC,CAAC;MAC3E;MACMzB,SAAS,CAACI,KAAK,GAAGN,EAAE,CAACM,KAAK;IAChC;EACA,CAAG,CAAC;EACF,OAAO;IACLH,OAAO;IACPe;EACJ,CAAG;AACH","names":["useBackTop","props","emit","componentName","el","shallowRef","container","visible","ref","scrollToTop","value","beginTime","Date","now","beginValue","scrollTop","frameFunc","progress","easeInOutCubic","requestAnimationFrame","handleScroll","visibilityHeight","handleClick","event","handleScrollThrottled","useThrottleFn","useEventListener","onMounted","_a","document","documentElement","target","querySelector","throwError"],"sources":["../../../../../../packages/components/backtop/src/use-backtop.ts"],"sourcesContent":["import { onMounted, ref, shallowRef } from 'vue'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { easeInOutCubic, throwError } from '@element-plus/utils'\n\nimport type { SetupContext } from 'vue'\nimport type { BacktopEmits, BacktopProps } from './backtop'\n\nexport const useBackTop = (\n  props: BacktopProps,\n  emit: SetupContext<BacktopEmits>['emit'],\n  componentName: string\n) => {\n  const el = shallowRef<HTMLElement>()\n  const container = shallowRef<Document | HTMLElement>()\n  const visible = ref(false)\n\n  const scrollToTop = () => {\n    // TODO: use https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo, with behavior: 'smooth'\n\n    if (!el.value) return\n    const beginTime = Date.now()\n    const beginValue = el.value.scrollTop\n    const frameFunc = () => {\n      if (!el.value) return\n      const progress = (Date.now() - beginTime) / 500\n      if (progress < 1) {\n        el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress))\n        requestAnimationFrame(frameFunc)\n      } else {\n        el.value.scrollTop = 0\n      }\n    }\n    requestAnimationFrame(frameFunc)\n  }\n  const handleScroll = () => {\n    if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight\n  }\n\n  const handleClick = (event: MouseEvent) => {\n    scrollToTop()\n    emit('click', event)\n  }\n\n  const handleScrollThrottled = useThrottleFn(handleScroll, 300, true)\n\n  useEventListener(container, 'scroll', handleScrollThrottled)\n  onMounted(() => {\n    container.value = document\n    el.value = document.documentElement\n\n    if (props.target) {\n      el.value = document.querySelector<HTMLElement>(props.target) ?? undefined\n      if (!el.value) {\n        throwError(componentName, `target does not exist: ${props.target}`)\n      }\n      container.value = el.value\n    }\n  })\n\n  return {\n    visible,\n    handleClick,\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}